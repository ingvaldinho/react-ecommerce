{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { signinSucess, signInFail, signoutSucess, signoutFail, signupSucess, signupFail } from './user.actions';\nimport { auth, googleAuthProvider, createUserprofileDocument, getUserSession } from '../../firebase/firebase.utils';\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getUserSession();\n    if (!userAuth) return;\n    yield getSnapChotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapChotFromUserAuth(userAuth, additionnalData) {\n  try {\n    const userRef = yield call(createUserprofileDocument, userAuth, additionnalData);\n    const userSnapchot = yield userRef.get();\n    yield put(signinSucess(_objectSpread({\n      id: userSnapchot.id\n    }, userSnapchot.data())));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInwithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleAuthProvider),\n          user = _ref.user;\n\n    yield getSnapChotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* onGooogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInwithGoogle);\n}\nexport function* onEmailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapChotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signout() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSucess());\n  } catch (error) {\n    yield put(signoutFail(error));\n  }\n}\nexport function* onSignoutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signout);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, onEmailSignIn);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionnalData\n  }\n}) {\n  yield getSnapChotFromUserAuth(user, additionnalData);\n}\nexport function* signup({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signupSucess({\n      user,\n      additionnalData: displayName\n    }));\n  } catch (error) {\n    yield put(signupFail(error));\n  }\n}\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signup);\n}\nexport function* userSagas() {\n  yield all([call(onGooogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignoutStart), call(onSignupStart), call(o)]);\n}","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signinSucess","signInFail","signoutSucess","signoutFail","signupSucess","signupFail","auth","googleAuthProvider","createUserprofileDocument","getUserSession","isUserAuthenticated","userAuth","getSnapChotFromUserAuth","error","onCheckUserSession","CHECK_USER_SESSION","additionnalData","userRef","userSnapchot","get","id","data","signInwithGoogle","signInWithPopup","user","onGooogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignIn","payload","email","password","signInWithEmailAndPassword","signout","signOut","onSignoutStart","SIGN_OUT_START","onEmailSignInStart","EMAIL_SIGN_IN_START","signInAfterSignUp","signup","displayName","createUserWithEmailAndPassword","onSignupStart","userSagas","o"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\n\nimport {UserActionTypes} from './user.types';\nimport {signinSucess,signInFail,signoutSucess,signoutFail,signupSucess,signupFail} from './user.actions'\n\nimport {auth,googleAuthProvider,createUserprofileDocument,getUserSession} from '../../firebase/firebase.utils';\n\nexport function* isUserAuthenticated(){\n    try {\n        const userAuth = yield getUserSession();\n        if(!userAuth) return;\n        yield getSnapChotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFail(error))\n    }\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\nexport function* getSnapChotFromUserAuth(userAuth,additionnalData){\n    try{\n        const userRef = yield call(createUserprofileDocument,userAuth,additionnalData);\n        const userSnapchot = yield userRef.get();\n\n        yield put(signinSucess({id:userSnapchot.id, ...userSnapchot.data()}));\n    } catch (error) {\n        yield put(signInFail(error));\n    }\n}\n\nexport function* signInwithGoogle(){\n    try {\n        const {user} =  yield auth.signInWithPopup(googleAuthProvider); \n        yield getSnapChotFromUserAuth(user)\n\n    }catch(error){\n        yield put(signInFail(error))\n    }\n}\n\nexport function* onGooogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInwithGoogle)\n}\n\nexport function* onEmailSignIn({payload: {email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapChotFromUserAuth(user);\n\n    }catch(error){\n        yield put(signInFail(error));\n    }\n    \n}\n\nexport function* signout(){\n    try {\n        yield auth.signOut();\n        yield put(signoutSucess());\n    } catch (error) {\n        yield put(signoutFail(error));\n    }\n}\n\nexport function* onSignoutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signout)\n}\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,onEmailSignIn)\n}\n\n\nexport function* signInAfterSignUp({payload:{user,additionnalData}}){\n    yield getSnapChotFromUserAuth(user,additionnalData);\n}\n\nexport function* signup({payload: {email,password,displayName}}){\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password);\n         yield put(signupSucess({user,additionnalData: displayName}));\n    } catch (error) {\n        yield put(signupFail(error));\n    }\n\n}\n\nexport function* onSignupStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signup)\n}\n\nexport function* userSagas(){\n    yield all([call(onGooogleSignInStart),\n             call(onEmailSignInStart),\n             call(isUserAuthenticated),\n             call(onSignoutStart),\n             call(onSignupStart),\n             call(o)\n    ])\n}"]},"metadata":{},"sourceType":"module"}