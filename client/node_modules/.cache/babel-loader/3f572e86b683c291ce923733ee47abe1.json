{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === itemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, itemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAWC,SAAX,KAAuB;AAChD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACrBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EADjB,CAAzB;;AAIA,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAQ,IAC1BA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,qBACID,QADJ;AACcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAmB;AAD3C,SAC+CH,QAF5C,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAkBC,SAAlB;AAA6BM,IAAAA,QAAQ,EAAC;AAAtC,KAAP;AACH,CAdM","sourcesContent":["export const addItemToCart = (cartItems,itemToAdd)=>{\n    const existingCartItem = cartItems.find(\n        cartItem => cartItem.id === itemToAdd.id\n    )\n\n    if(existingCartItem){\n        return cartItems.map( cartItem =>\n            cartItem.id === itemToAdd.id?\n            {...cartItem, quantity: cartItem.quantity +1}: cartItem\n            \n        )\n    }\n\n    return [...cartItems,{...itemToAdd, quantity:1}]\n}"]},"metadata":{},"sourceType":"module"}