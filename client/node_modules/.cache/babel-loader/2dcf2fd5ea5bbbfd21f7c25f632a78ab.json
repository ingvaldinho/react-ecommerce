{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst config = {\n  apiKey: \"AIzaSyAWHLu1k65qWMo1LwAp6ggwDSPOX4ZVlKI\",\n  authDomain: \"react-ecommerce-db-9f66c.firebaseapp.com\",\n  databaseURL: \"https://react-ecommerce-db-9f66c.firebaseio.com\",\n  projectId: \"react-ecommerce-db-9f66c\",\n  storageBucket: \"react-ecommerce-db-9f66c.appspot.com\",\n  messagingSenderId: \"199730805843\",\n  appId: \"1:199730805843:web:a1063839073f03cc2ddaa6\",\n  measurementId: \"G-FCF53Y6PJP\"\n};\nexport const createUserprofileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //  \n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  console.log(userRef);\n  const userSnapChot = await userRef.get();\n\n  if (!userSnapChot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log;\n    }\n  }\n\n  console.log(userSnapChot);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst GoogleAuthProvider = new firebase.auth.GoogleAuthProvider(); //   const GithubAuthProvider = new firebase.auth.GithubAuthProvider();\n\nGoogleAuthProvider.setCustomParameters({\n  prompt: 'select_account'\n}); //   GithubAuthProvider.setCustomParameters({promp: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleAuthProvider); //   export const signInwithGitHub = ()=> auth.signInWithPopup(GithubAuthProvider);\n\nexport default firebase;","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserprofileDocument","userAuth","additionalData","userRef","firestore","doc","uid","console","log","userSnapChot","get","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,0CAFD;AAGXC,EAAAA,WAAW,EAAE,iDAHF;AAIXC,EAAAA,SAAS,EAAE,0BAJA;AAKXC,EAAAA,aAAa,EAAE,sCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWE,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAeC,cAAf,KAAgC;AACvE,MAAG,CAACD,QAAJ,EAAc,OADyD,CAE3E;;AACI,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAEA,QAAMM,YAAY,GAAG,MAAMN,OAAO,CAACO,GAAR,EAA3B;;AAEA,MAAG,CAACD,YAAY,CAACE,MAAjB,EAAwB;AAAA,UACbC,WADa,GACQX,QADR,CACbW,WADa;AAAA,UACDC,KADC,GACQZ,QADR,CACDY,KADC;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA;AAHc,OAAZ,CAAN;AAKH,KAND,CAME,OAAOG,KAAP,EAAc;AACZV,MAAAA,OAAO,CAACC,GAAR;AAEH;AACJ;;AAEDD,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD,CAzBM;AA2BPnB,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,kBAAkB,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcC,kBAAlB,EAA3B,C,CACF;;AAEEA,kBAAkB,CAACC,mBAAnB,CAAuC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAAvC,E,CACF;;AAEE,OAAO,MAAMC,gBAAgB,GAAG,MAAKJ,IAAI,CAACK,eAAL,CAAqBJ,kBAArB,CAA9B,C,CACT;;AAEE,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst config = {\n    apiKey: \"AIzaSyAWHLu1k65qWMo1LwAp6ggwDSPOX4ZVlKI\",\n    authDomain: \"react-ecommerce-db-9f66c.firebaseapp.com\",\n    databaseURL: \"https://react-ecommerce-db-9f66c.firebaseio.com\",\n    projectId: \"react-ecommerce-db-9f66c\",\n    storageBucket: \"react-ecommerce-db-9f66c.appspot.com\",\n    messagingSenderId: \"199730805843\",\n    appId: \"1:199730805843:web:a1063839073f03cc2ddaa6\",\n    measurementId: \"G-FCF53Y6PJP\"\n  }\n\n  export const createUserprofileDocument = async(userAuth,additionalData)=>{\n    if(!userAuth) return;\n//  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    console.log(userRef);\n\n    const userSnapChot = await userRef.get();\n\n    if(!userSnapChot.exists){\n        const {displayName,email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt\n            })\n        } catch (error) {\n            console.log\n            \n        }\n    }\n\n    console.log(userSnapChot); \n  }\n\n  firebase.initializeApp(config);\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  const GoogleAuthProvider = new firebase.auth.GoogleAuthProvider();\n//   const GithubAuthProvider = new firebase.auth.GithubAuthProvider();\n\n  GoogleAuthProvider.setCustomParameters({prompt:'select_account'});\n//   GithubAuthProvider.setCustomParameters({promp: 'select_account'});\n\n  export const signInWithGoogle = ()=> auth.signInWithPopup(GoogleAuthProvider);\n//   export const signInwithGitHub = ()=> auth.signInWithPopup(GithubAuthProvider);\n\n  export default firebase;"]},"metadata":{},"sourceType":"module"}