{"ast":null,"code":"var _jsxFileName = \"/home/ingvaldinho/projet/react-ecommerce/src/page/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewComponent from '../../component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapChotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../component/with-spinner/with-spinner.component';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverviewComponent);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapChot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapchot => {\n      const collectionMap = convertCollectionSnapChotToMap(snapchot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/page/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewComponent","CollectionPage","firestore","convertCollectionSnapChotToMap","updateCollections","WithSpinner","CollectionOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapChot","componentDidMount","props","collectionRef","collection","onSnapshot","snapchot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,OAAOC,4BAAP,MAAyC,qEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AACA,SAAQC,iBAAR,QAAgC,8BAAhC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,4BAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAF0B;AAAA,SAMlCC,uBANkC,GAMR,IANQ;AAAA;;AAQlCC,EAAAA,iBAAiB,GAAE;AAAA,UACPT,iBADO,GACc,KAAKU,KADnB,CACPV,iBADO;AAEf,UAAMW,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAA0B,MAAOC,QAAP,IAAkB;AACzC,YAAMC,aAAa,GAAGhB,8BAA8B,CAACe,QAAD,CAApD;AACAd,MAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AAEF,KALD;AAMH;;AAEDU,EAAAA,MAAM,GAAE;AAAA,UACGC,KADH,GACY,KAAKR,KADjB,CACGQ,KADH;AAAA,UAEGX,OAFH,GAEc,KAAKD,KAFnB,CAEGC,OAFH;AAGJ,WAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAIT,KAAD,IAAU,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAIT,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFA;AAOH;;AA9BiC;;AAiCtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,iBAAiB,EAAGe,aAAa,IAAIM,QAAQ,CAACrB,iBAAiB,CAACe,aAAD,CAAlB;AADT,CAAL,CAAnC;;AAKA,eAAepB,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nimport CollectionsOverviewComponent from '../../component/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore,convertCollectionSnapChotToMap} from '../../firebase/firebase.utils';\nimport {updateCollections} from '../../redux/shop/shop.action';\nimport WithSpinner from '../../component/with-spinner/with-spinner.component';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverviewComponent);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component{ \n\n    state = {\n        loading:true\n    }\n\n    unSubscribeFromSnapChot = null;\n\n    componentDidMount(){\n        const { updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.onSnapshot( async (snapchot)=>{\n           const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n           updateCollections(collectionMap);\n           this.setState({loading: false});\n\n        })\n    }\n\n    render(){ \n        const {match} = this.props;\n        const {loading} = this.state;\n        return(\n\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} render={ (props)=> <CollectionOverViewWithSpinner isLoading={loading} {...props} /> }/>\n            <Route path={`${match.path}/:collectionId`} render={ (props)}/>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections : collectionMap => dispatch(updateCollections(collectionMap)) \n})\n\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}