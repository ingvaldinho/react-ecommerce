{"ast":null,"code":"import { ShopActionsType } from './shop.types';\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapChotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFail, fetchCollectionsSucess } from './shop.action';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n  const collectionRef = yield firestore.collection('collections');\n  const snapchot = yield collectionRef.get();\n  const collectionMap = call(convertCollectionSnapChotToMap, snapchot);\n  put(); // collectionRef.get().then( async (snapchot)=>{\n  //    const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n  //    dispach(fetchCollectionsSucess(collectionMap))\n  // }).catch(error=>{\n  //     dispach(fetchCollectionsFail(error.message));\n  // })\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsType.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/shop/shop.sagas.js"],"names":["ShopActionsType","takeEvery","call","put","firestore","convertCollectionSnapChotToMap","fetchCollectionsFail","fetchCollectionsSucess","fetchCollectionAsync","console","log","collectionRef","collection","snapchot","get","collectionMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AAEA,SAAQC,oBAAR,EAA6BC,sBAA7B,QAA0D,eAA1D;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AACnC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAG,MAAMP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,QAAMC,aAAa,GAAGb,IAAI,CAACG,8BAAD,EAAgCQ,QAAhC,CAA1B;AAEAV,EAAAA,GAAG,GARgC,CAW/B;AACA;AACA;AAEA;AACA;AACA;AACP;AAED,OAAO,UAAUa,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CAACD,eAAe,CAACiB,uBAAjB,EACVT,oBADU,CAAf;AAGH","sourcesContent":["import {ShopActionsType} from './shop.types';\nimport {takeEvery,call,put} from 'redux-saga/effects';\n\nimport {firestore,convertCollectionSnapChotToMap} from '../../firebase/firebase.utils';\n\nimport {fetchCollectionsFail,fetchCollectionsSucess} from './shop.action';\n\nexport function* fetchCollectionAsync(){\n    yield console.log('I am fired');\n\n    const collectionRef = yield firestore.collection('collections');\n    const snapchot = yield collectionRef.get();\n\n    const collectionMap = call(convertCollectionSnapChotToMap,snapchot);\n\n    put()\n\n\n        // collectionRef.get().then( async (snapchot)=>{\n        //    const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n        //    dispach(fetchCollectionsSucess(collectionMap))\n\n        // }).catch(error=>{\n        //     dispach(fetchCollectionsFail(error.message));\n        // })\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionsType.FETCH_COLLECTIONS_START,\n         fetchCollectionAsync\n         );\n}"]},"metadata":{},"sourceType":"module"}