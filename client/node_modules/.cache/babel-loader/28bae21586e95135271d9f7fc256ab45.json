{"ast":null,"code":"import { ShopActionsType } from './shop.types';\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapChotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFail, fetchCollectionsSucess } from './shop.action';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapchot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapChotToMap, snapchot);\n    put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    put(fetchCollectionsFail(error.message));\n  } // collectionRef.get().then( async (snapchot)=>{\n  //    const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n  //    dispach(fetchCollectionsSucess(collectionMap))\n  // }).catch(error=>{\n  //     dispach(fetchCollectionsFail(error.message));\n  // })\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionsType.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/shop/shop.sagas.js"],"names":["ShopActionsType","takeEvery","call","put","firestore","convertCollectionSnapChotToMap","fetchCollectionsFail","fetchCollectionsSucess","fetchCollectionAsync","collectionRef","collection","snapchot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AAEA,SAAQC,oBAAR,EAA6BC,sBAA7B,QAA0D,eAA1D;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAG;AACC,UAAMC,aAAa,GAAIL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,aAAa,GAAG,MAAMX,IAAI,CAACG,8BAAD,EAAgCM,QAAhC,CAAhC;AAECR,IAAAA,GAAG,CAACI,sBAAsB,CAACM,aAAD,CAAvB,CAAH;AACJ,GAPD,CAOC,OAAMC,KAAN,EAAY;AACTX,IAAAA,GAAG,CAACG,oBAAoB,CAACQ,KAAK,CAACC,OAAP,CAArB,CAAH;AACH,GAXkC,CAc/B;AACA;AACA;AAEA;AACA;AACA;;AACP;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CAACD,eAAe,CAACiB,uBAAjB,EACVT,oBADU,CAAf;AAGH","sourcesContent":["import {ShopActionsType} from './shop.types';\nimport {takeEvery,call,put} from 'redux-saga/effects';\n\nimport {firestore,convertCollectionSnapChotToMap} from '../../firebase/firebase.utils';\n\nimport {fetchCollectionsFail,fetchCollectionsSucess} from './shop.action';\n\nexport function* fetchCollectionAsync(){\n\n    try{\n        const collectionRef =  firestore.collection('collections');\n        const snapchot = yield collectionRef.get();\n\n        const collectionMap = yield call(convertCollectionSnapChotToMap,snapchot);\n\n         put(fetchCollectionsSucess(collectionMap))\n    }catch(error){\n        put(fetchCollectionsFail(error.message));\n    }\n\n\n        // collectionRef.get().then( async (snapchot)=>{\n        //    const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n        //    dispach(fetchCollectionsSucess(collectionMap))\n\n        // }).catch(error=>{\n        //     dispach(fetchCollectionsFail(error.message));\n        // })\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionsType.FETCH_COLLECTIONS_START,\n         fetchCollectionAsync\n         );\n}"]},"metadata":{},"sourceType":"module"}