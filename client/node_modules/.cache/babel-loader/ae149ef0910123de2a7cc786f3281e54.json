{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ingvaldinho/projet/react-ecommerce/src/component/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const HandleSubmit = async event => {\n    event.preventDefault();\n    const email = userCredentials.email,\n          password = userCredentials.password;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: this.handleChange,\n    value: this.state.email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    handleChange: this.handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispachToProps = dispach => ({\n  onGoogleSignInStart: () => dispach(googleSignInStart()),\n  emailSignInStart: (email, password) => dispach(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispachToProps)(SignIn);","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/component/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","SignInContainer","SignInTitle","ButtonsBarContainer","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setUserCredentials","HandleSubmit","event","preventDefault","handleChange","target","name","value","handleSubmit","state","mapDispachToProps","dispach","onGoogleSignInStart"],"mappings":"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","sourcesContent":["import React, {Component,useState} from 'react';\nimport {connect} from 'react-redux';\n\n\nimport {\n    SignInContainer,\n    SignInTitle,\n    ButtonsBarContainer\n  } from './sign-in.styles';\n  \nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.actions';\n\n\nconst SignIn = ({emailSignInStart,googleSignInStart})=>{\n    const [userCredentials,setUserCredentials] = useState({email:'',password:''})\n\n   \n\n    const HandleSubmit= async (event)=>{\n        event.preventDefault();\n        const {email,password} = userCredentials;\n\n        emailSignInStart(email,password);\n\n\n    }\n\n    const handleChange= (event)=>{\n        const {name,value} = event.target;\n\n        setUserCredentials({...userCredentials,[name]:value});\n    }\n\n\n        return (\n          <SignInContainer>\n            <SignInTitle>I already have an account</SignInTitle>\n            <span>Sign in with your email and password</span>\n    \n            <form onSubmit={this.handleSubmit}>\n              <FormInput\n                name='email'\n                type='email'\n                handleChange={this.handleChange}\n                value={this.state.email}\n                label='email'\n                required\n              />\n              <FormInput\n                name='password'\n                type='password'\n                value={this.state.password}\n                handleChange={this.handleChange}\n                label='password'\n                required\n              />\n              <ButtonsBarContainer>\n                <CustomButton type='submit'> Sign in </CustomButton>\n                <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                  Sign in with Google\n                </CustomButton>\n              </ButtonsBarContainer>\n            </form>\n          </SignInContainer>\n        );\n      }\n\n\nconst mapDispachToProps = dispach => ({\n  onGoogleSignInStart: ()=>dispach(googleSignInStart()),\n  emailSignInStart: (email,password)=> dispach(emailSignInStart({email,password}))\n})\n\nexport default connect(null,mapDispachToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}