{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/ingvaldinho/projet/react-ecommerce/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ingvaldinho/projet/react-ecommerce/client/src/component/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormImput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  onSignupStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Password and confirm password does\\'nt match');\n      return;\n    }\n\n    onSignupStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormImput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(FormImput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispachToProps = dispach => ({\n  onSignupStart: userCredentials => dispach(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispachToProps)(SignUp);","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/client/src/component/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormImput","CustomButton","SignUpContainer","SignUpTitle","signUpStart","SignUp","onSignupStart","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","e","target","name","value","mapDispachToProps","dispach"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport FormImput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport {signUpStart} from '../../redux/user/user.actions';\nconst SignUp = ({onSignupStart})=>{\n\n  const [userCredentials,setUserCredentials] = useState({\n         displayName: '',\n            email:'',\n            password:'',\n            confirmPassword:''\n  })\n\n  const {displayName,email,password,confirmPassword} = userCredentials;\n\n\n    const handleSubmit = async (event)=>{\n        event.preventDefault();\n\n        if(password !== confirmPassword){\n            alert('Password and confirm password does\\'nt match');\n            return;\n        }\n        \n        onSignupStart({email,password,displayName});\n\n    }\n\n    const handleChange = (e)=>{\n        const {name,value} = e.target;\n\n        setUserCredentials({...userCredentials,[name]:value});\n    }\n\n\n        return (\n            <SignUpContainer>\n        <SignUpTitle>I do not have a account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormImput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            required\n          />\n          <FormImput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            required\n          />\n          <FormImput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormImput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignUpContainer>\n        )\n    }\n\n\n\nconst mapDispachToProps = dispach=>({\n  onSignupStart: (userCredentials)=> dispach(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispachToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}