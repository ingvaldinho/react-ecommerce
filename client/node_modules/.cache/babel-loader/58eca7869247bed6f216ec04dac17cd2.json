{"ast":null,"code":"import { ShopActionsType } from './shop.types';\nimport { firestore, convertCollectionSnapChotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionsType.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSucess = collectionsMap => ({\n  type: ShopActionsType.FETCH_COLLECTIONS_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFail = errorMessage => ({\n  type: ShopActionsType.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispach => {\n    const collectionRef = firestore.collection('collections');\n    dispach(fetchCollectionsStart());\n    collectionRef.get().then(async snapchot => {\n      const collectionMap = convertCollectionSnapChotToMap(snapchot);\n      dispach(fetchCollectionsSucess(collectionMap));\n    }).then(error => {\n      dispach(fetchCollectionsFail(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/shop/shop.action.js"],"names":["ShopActionsType","firestore","convertCollectionSnapChotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSucess","collectionsMap","payload","fetchCollectionsFail","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispach","collectionRef","collection","get","then","snapchot","collectionMap","error","message"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAN,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACK,uBAD+B;AAErDG,EAAAA,OAAO,EAAED;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAME,oBAAoB,GAAGC,YAAY,KAAK;AACjDN,EAAAA,IAAI,EAAEJ,eAAe,CAACW,yBAD2B;AAEjDH,EAAAA,OAAO,EAAEE;AAFwC,CAAL,CAAzC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAI;AAC3C,SAAOC,OAAO,IAAG;AAChB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,OAAO,CAACV,qBAAqB,EAAtB,CAAP;AAGIW,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0B,MAAOC,QAAP,IAAkB;AACzC,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACAL,MAAAA,OAAO,CAACP,sBAAsB,CAACa,aAAD,CAAvB,CAAP;AAEF,KAJD,EAIGF,IAJH,CAIQG,KAAK,IAAE;AACXP,MAAAA,OAAO,CAACJ,oBAAoB,CAACW,KAAK,CAACC,OAAP,CAArB,CAAP;AACH,KAND;AAOH,GAZF;AAaF,CAdM","sourcesContent":["import {ShopActionsType} from './shop.types';\nimport {firestore,convertCollectionSnapChotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = ()=> ({\n    type: ShopActionsType.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSucess = collectionsMap => ({\n    type: ShopActionsType.FETCH_COLLECTIONS_START,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFail = errorMessage => ({\n    type: ShopActionsType.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = ()=>{\n   return dispach =>{\n    const collectionRef = firestore.collection('collections');\n    dispach(fetchCollectionsStart());\n\n\n        collectionRef.get().then( async (snapchot)=>{\n           const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n           dispach(fetchCollectionsSucess(collectionMap))\n\n        }).then(error=>{\n            dispach(fetchCollectionsFail(error.message));\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}