{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ingvaldinho/projet/react-ecommerce/src/component/with-spinner/with-spinner.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { SpinnerContainer, SpinnerOverlay } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => (_ref) => {\n  let isLoading = _ref.isLoading,\n      otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n  console.log('props', _objectSpread({}, otherProps));\n  return isLoading ? React.createElement(SpinnerOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(SpinnerContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/component/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","isLoading","otherProps","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,gBAAR,EAAyBC,cAAzB,QAA8C,uBAA9C;;AAEA,MAAMC,WAAW,GAAGC,gBAAgB,IAAI,UAA8B;AAAA,MAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,MAAdC,UAAc;;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,oBAAwBF,UAAxB;AAEA,SAAOD,SAAS,GACZ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADY,GAMZ,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANJ;AAQH,CAXD;;AAaA,eAAeH,WAAf","sourcesContent":["import React from 'react';\n\nimport {SpinnerContainer,SpinnerOverlay} from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps})=>{\n    console.log('props',{...otherProps})\n\n    return isLoading ? (\n        <SpinnerOverlay>\n            <SpinnerContainer/>\n        </SpinnerOverlay>\n    ) : \n    (\n        <WrappedComponent {...otherProps}/>\n    )\n}\n\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}