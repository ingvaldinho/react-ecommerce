{"ast":null,"code":"import _defineProperty from \"/home/ingvaldinho/projet/react-ecommerce/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { signinSucess, signInFail } from './user.actions';\nimport { auth, googleAuthProvider, createUserprofileDocument, getUserSession } from '../../firebase/firebase.utils';\nexport function* isUserAuthenticated() {\n  try {} catch (error) {\n    yield put(signInFail(e));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* getSnapChotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserprofileDocument, userAuth);\n    const userSnapchot = yield userRef.get();\n    yield put(signinSucess(_objectSpread({\n      id: userSnapchot.id\n    }, userSnapchot.data())));\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* signInwithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleAuthProvider),\n          user = _ref.user;\n\n    yield getSnapChotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* onGooogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInwithGoogle);\n}\nexport function* onEmailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapChotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFail(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, onEmailSignIn);\n}\nexport function* userSagas() {\n  yield all([call(onGooogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signinSucess","signInFail","auth","googleAuthProvider","createUserprofileDocument","getUserSession","isUserAuthenticated","error","e","onCheckUserSession","CHECK_USER_SESSION","getSnapChotFromUserAuth","userAuth","userRef","userSnapchot","get","id","data","signInwithGoogle","signInWithPopup","user","onGooogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignIn","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";;;;;;AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AAEA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,YAAR,EAAqBC,UAArB,QAAsC,gBAAtC;AAEA,SAAQC,IAAR,EAAaC,kBAAb,EAAgCC,yBAAhC,EAA0DC,cAA1D,QAA+E,+BAA/E;AAEA,OAAO,UAAUC,mBAAV,GAA+B;AACtC,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc;AACZ,UAAMX,GAAG,CAACK,UAAU,CAACO,CAAD,CAAX,CAAT;AACH;AACA;AAED,OAAO,UAAUC,kBAAV,GAA8B;AACjC,QAAMd,UAAU,CAACI,eAAe,CAACW,kBAAjB,EAAqCJ,mBAArC,CAAhB;AACH;AAGD,OAAO,UAAUK,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMf,IAAI,CAACM,yBAAD,EAA2BQ,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEA,UAAMnB,GAAG,CAACI,YAAY;AAAEgB,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAyBF,YAAY,CAACG,IAAb,EAAzB,EAAb,CAAT;AACH,GALD,CAKE,OAAOV,KAAP,EAAc;AACZ,UAAMX,GAAG,CAACK,UAAU,CAACM,KAAD,CAAX,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,gBAAV,GAA4B;AAC/B,MAAI;AAAA,iBACgB,MAAMhB,IAAI,CAACiB,eAAL,CAAqBhB,kBAArB,CADtB;AAAA,UACOiB,IADP,QACOA,IADP;;AAEA,UAAMT,uBAAuB,CAACS,IAAD,CAA7B;AAEH,GAJD,CAIC,OAAMb,KAAN,EAAY;AACT,UAAMX,GAAG,CAACK,UAAU,CAACM,KAAD,CAAX,CAAT;AACH;AACJ;AAED,OAAO,UAAUc,oBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAsCJ,gBAAtC,CAAhB;AACH;AAED,OAAO,UAAUK,aAAV,CAAwB;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAAxB,EAAoD;AACvD,MAAG;AAAA,kBACgB,MAAMxB,IAAI,CAACyB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQN,IADR,SACQA,IADR;;AAEC,UAAMT,uBAAuB,CAACS,IAAD,CAA7B;AAEH,GAJD,CAIC,OAAMb,KAAN,EAAY;AACT,UAAMX,GAAG,CAACK,UAAU,CAACM,KAAD,CAAX,CAAT;AACH;AAEJ;AAID,OAAO,UAAUqB,kBAAV,GAA8B;AACjC,QAAMjC,UAAU,CAACI,eAAe,CAAC8B,mBAAjB,EAAqCN,aAArC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAMjC,GAAG,CAAC,CAACC,IAAI,CAACuB,oBAAD,CAAL,EACDvB,IAAI,CAAC8B,kBAAD,CADH,CAAD,CAAT;AAGH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\n\nimport {UserActionTypes} from './user.types';\nimport {signinSucess,signInFail} from './user.actions'\n\nimport {auth,googleAuthProvider,createUserprofileDocument,getUserSession} from '../../firebase/firebase.utils';\n\nexport function* isUserAuthenticated(){\ntry {\n    \n} catch (error) {\n    yield put(signInFail(e))\n}\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\n\nexport function* getSnapChotFromUserAuth(userAuth){\n    try{\n        const userRef = yield call(createUserprofileDocument,userAuth);\n        const userSnapchot = yield userRef.get();\n\n        yield put(signinSucess({id:userSnapchot.id, ...userSnapchot.data()}));\n    } catch (error) {\n        yield put(signInFail(error));\n    }\n}\n\nexport function* signInwithGoogle(){\n    try {\n        const {user} =  yield auth.signInWithPopup(googleAuthProvider); \n        yield getSnapChotFromUserAuth(user)\n\n    }catch(error){\n        yield put(signInFail(error))\n    }\n}\n\nexport function* onGooogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInwithGoogle)\n}\n\nexport function* onEmailSignIn({payload: {email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapChotFromUserAuth(user);\n\n    }catch(error){\n        yield put(signInFail(error));\n    }\n    \n}\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,onEmailSignIn)\n}\n\nexport function* userSagas(){\n    yield all([call(onGooogleSignInStart),\n             call(onEmailSignInStart) \n    ])\n}"]},"metadata":{},"sourceType":"module"}