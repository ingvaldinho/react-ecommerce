{"ast":null,"code":"import { ShopActionsType } from './shop.types';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapChotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFail, fetchCollectionsSucess } from './shop.action';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapchot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapChotToMap, snapchot);\n    yield put(fetchCollectionsSucess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFail(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionsType.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  y;\n}","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/shop/shop.sagas.js"],"names":["ShopActionsType","takeLatest","call","put","firestore","convertCollectionSnapChotToMap","fetchCollectionsFail","fetchCollectionsSucess","fetchCollectionAsync","collectionRef","collection","snapchot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas","y"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AACA,SAAQC,UAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AAEA,SAAQC,SAAR,EAAkBC,8BAAlB,QAAuD,+BAAvD;AAEA,SAAQC,oBAAR,EAA6BC,sBAA7B,QAA0D,eAA1D;AAEA,OAAO,UAAUC,oBAAV,GAAgC;AAEnC,MAAG;AACC,UAAMC,aAAa,GAAIL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,aAAa,GAAG,MAAMX,IAAI,CAACG,8BAAD,EAAgCM,QAAhC,CAAhC;AAEA,UAAMR,GAAG,CAACI,sBAAsB,CAACM,aAAD,CAAvB,CAAT;AACH,GAPD,CAOC,OAAMC,KAAN,EAAY;AACR,UAAMX,GAAG,CAACG,oBAAoB,CAACQ,KAAK,CAACC,OAAP,CAArB,CAAT;AACJ;AAEJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMf,UAAU,CAACD,eAAe,CAACiB,uBAAjB,EACXT,oBADW,CAAhB;AAGH;AAED,OAAO,UAAUU,SAAV,GAAqB;AACxBC,EAAAA,CAAC;AACJ","sourcesContent":["import {ShopActionsType} from './shop.types';\nimport {takeLatest,call,put} from 'redux-saga/effects';\n\nimport {firestore,convertCollectionSnapChotToMap} from '../../firebase/firebase.utils';\n\nimport {fetchCollectionsFail,fetchCollectionsSucess} from './shop.action';\n\nexport function* fetchCollectionAsync(){\n\n    try{\n        const collectionRef =  firestore.collection('collections');\n        const snapchot = yield collectionRef.get();\n\n        const collectionMap = yield call(convertCollectionSnapChotToMap,snapchot);\n\n        yield put(fetchCollectionsSucess(collectionMap))\n    }catch(error){\n         yield put(fetchCollectionsFail(error.message));\n    }\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeLatest(ShopActionsType.FETCH_COLLECTIONS_START,\n         fetchCollectionAsync\n         );\n}\n\nexport function* shopSagas(){\n    y\n}"]},"metadata":{},"sourceType":"module"}