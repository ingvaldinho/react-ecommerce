{"ast":null,"code":"import { ShopActionsType } from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionsType.UPDATE_COLLECTION\n});\nexport const fetchCollectionsSucess = collectionsMap => ({\n  type: ShopActionsType.FETCH_COLLECTIONS_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFail = errorMessage => ({\n  type: ShopActionsType.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsAsync = () => {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.onSnapshot(async snapchot => {\n    const collectionMap = convertCollectionSnapChotToMap(snapchot);\n    updateCollections(collectionMap);\n    this.setState({\n      loading: false\n    });\n  });\n};","map":{"version":3,"sources":["/home/ingvaldinho/projet/react-ecommerce/src/redux/shop/shop.action.js"],"names":["ShopActionsType","fetchCollectionsStart","type","UPDATE_COLLECTION","fetchCollectionsSucess","collectionsMap","FETCH_COLLECTIONS_START","payload","fetchCollectionsFail","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsAsync","collectionRef","firestore","collection","onSnapshot","snapchot","collectionMap","convertCollectionSnapChotToMap","updateCollections","setState","loading"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,cAA9B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAM;AACvCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADiB,CAAN,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,uBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,oBAAoB,GAAGC,YAAY,KAAK;AACjDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBAD2B;AAEjDH,EAAAA,OAAO,EAAEE;AAFwC,CAAL,CAAzC;AAKP,OAAO,MAAME,qBAAqB,GAAG,MAAI;AACrC,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEIF,EAAAA,aAAa,CAACG,UAAd,CAA0B,MAAOC,QAAP,IAAkB;AACzC,UAAMC,aAAa,GAAGC,8BAA8B,CAACF,QAAD,CAApD;AACAG,IAAAA,iBAAiB,CAACF,aAAD,CAAjB;AACA,SAAKG,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAd;AAEF,GALD;AAMP,CATM","sourcesContent":["import {ShopActionsType} from './shop.types';\n\nexport const fetchCollectionsStart = ()=> ({\n    type: ShopActionsType.UPDATE_COLLECTION\n})\n\nexport const fetchCollectionsSucess = collectionsMap => ({\n    type: ShopActionsType.FETCH_COLLECTIONS_START,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionsFail = errorMessage => ({\n    type: ShopActionsType.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})\n\nexport const fetchCollectionsAsync = ()=>{\n    const collectionRef = firestore.collection('collections');\n\n        collectionRef.onSnapshot( async (snapchot)=>{\n           const collectionMap = convertCollectionSnapChotToMap(snapchot);   \n           updateCollections(collectionMap);\n           this.setState({loading: false});\n\n        })\n}"]},"metadata":{},"sourceType":"module"}